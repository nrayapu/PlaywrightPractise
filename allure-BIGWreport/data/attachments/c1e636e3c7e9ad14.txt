# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: TC_05-OrangeHRM Login, Navigate to Time & Buzz, Post Message, Like and comment
- Location: C:\SoftwareDownloads\tests\myfirstscenarios.spec.js:141:6

# Error details

```
Error: page.waitForSelector: Test timeout of 30000ms exceeded.
Call log:
  - waiting for locator('p:has-text("admin123")') to be visible

    at C:\SoftwareDownloads\tests\myfirstscenarios.spec.js:173:14
```

# Page snapshot

```yaml
- complementary:
  - navigation "Sidepanel":
    - link "client brand banner":
      - img "client brand banner"
    - textbox "Search"
    - button ""
    - separator
    - list:
      - listitem:
        - link "Admin"
      - listitem:
        - link "PIM"
      - listitem:
        - link "Leave"
      - listitem:
        - link "Time"
      - listitem:
        - link "Recruitment"
      - listitem:
        - link "My Info"
      - listitem:
        - link "Performance"
      - listitem:
        - link "Dashboard"
      - listitem:
        - link "Directory"
      - listitem:
        - link "Maintenance"
      - listitem:
        - link "Claim":
          - img
          - text: Claim
      - listitem:
        - link "Buzz"
- banner:
  - heading "Buzz" [level=6]
  - link "Upgrade":
    - button "Upgrade"
  - list:
    - listitem:
      - img "profile picture"
      - paragraph: FirstNameTest LastNameTest
      - text: 
  - navigation "Topbar Menu":
    - list:
      - button ""
- paragraph: Buzz Newsfeed
- img "profile picture"
- textbox "What's on your mind?"
- button "Post"
- separator
- button "Share Photos"
- button "Share Video"
- button " Most Recent Posts"
- button " Most Liked Posts"
- button " Most Commented Posts"
- img "profile picture"
- paragraph: FirstNameTest adolfo LastNameTest
- paragraph: 2025-21-03 04:04 AM
- listitem:
  - button ""
- separator
- paragraph: Texto qualquer Editado
- img
- button ""
- button ""
- text: 
- paragraph: 0 Likes
- paragraph: 0 Comments
- text: ‚
- paragraph: 0 Shares
- img "profile picture"
- paragraph: FirstNameTest adolfo LastNameTest
- paragraph: 2025-21-03 04:01 AM
- listitem:
  - button ""
- separator
- paragraph: Texto qualquer Editado
- img
- button ""
- button ""
- text: 
- paragraph: 0 Likes
- paragraph: 0 Comments
- text: ‚
- paragraph: 0 Shares
- img "profile picture"
- paragraph: FirstNameTest adolfo LastNameTest
- paragraph: 2025-21-03 03:57 AM
- listitem:
  - button ""
- separator
- paragraph: Texto qualquer
- img
- button ""
- button ""
- text: 
- paragraph: 0 Likes
- paragraph: 0 Comments
- text: ‚
- paragraph: 0 Shares
- img "profile picture"
- paragraph: FirstNameTest adolfo LastNameTest
- paragraph: 2025-21-03 03:56 AM
- listitem:
  - button ""
- separator
- paragraph: Texto qualquera
- img
- button ""
- button ""
- text: 
- paragraph: 0 Likes
- paragraph: 0 Comments
- text: ‚
- paragraph: 0 Shares
- paragraph: Upcoming Anniversaries
- img "No Content"
- paragraph: No Records Found
- paragraph: OrangeHRM OS 5.7
- paragraph:
  - text: © 2005 - 2025
  - link "OrangeHRM, Inc"
  - text: . All rights reserved.
```

# Test source

```ts
   73 |   await page.goto('https://opensource-demo.orangehrmlive.com/web/index.php/auth/login');
   74 |
   75 |   // Wait for the login form to be visible
   76 |   await page.waitForSelector('input[name="username"]');
   77 |
   78 |   // Enter Username and Password
   79 |   await page.fill('input[name="username"]', 'Admin');
   80 |   await page.fill('input[name="password"]', 'admin123');
   81 |
   82 |   // Click the Login button
   83 |   await page.click('button[type="submit"]');
   84 |
   85 |   // Wait for the dashboard to load
   86 |   await page.waitForURL(/.*dashboard.*/);
   87 |
   88 |   // Verify successful login
   89 |   await expect(page).toHaveURL(/.*dashboard.*/);
   90 |   console.log("✅ Login successful!");
   91 |
   92 |   // Click on the "Performance" tab in the left menu
   93 |   await page.click('a[href="/web/index.php/performance/viewPerformanceModule"]');
   94 |
   95 |   // Wait for the Performance page to load
   96 |   await page.waitForURL(/.*performance.*/);
   97 |
   98 |   // Verify navigation to the Performance page
   99 |   await expect(page).toHaveURL(/.*performance.*/);
  100 |   console.log("✅ Navigated to Performance Page successfully!");
  101 | });
  102 |
  103 | test('TC_04-OrangeHRM Login, Navigate to Time & Buzz, Post Message', async ({ page }) => {
  104 |   // Step 1: Open the OrangeHRM login page
  105 |   await page.goto('https://opensource-demo.orangehrmlive.com/web/index.php/auth/login');
  106 |
  107 |   // Step 2: Wait for login fields and enter credentials
  108 |   await page.fill('input[name="username"]', 'Admin');
  109 |   await page.fill('input[name="password"]', 'admin123');
  110 |
  111 |   // Step 3: Click the login button
  112 |   await page.click('button[type="submit"]');
  113 |
  114 |   // Step 4: Wait for dashboard to load and verify successful login
  115 |   await page.waitForURL(/.*dashboard.*/);
  116 |   console.log("✅ Successfully logged in!");
  117 |
  118 |   // Step 5: Navigate to "Time" page
  119 |   await page.click('a[href="/web/index.php/time/viewTimeModule"]');
  120 |   await page.waitForURL(/.*time.*/);
  121 |   console.log("✅ Successfully navigated to Time page!");
  122 |
  123 |   // Step 6: Navigate to "Buzz" page
  124 |   await page.click('a[href="/web/index.php/buzz/viewBuzz"]');
  125 |   await page.waitForURL(/.*buzz.*/);
  126 |   console.log("✅ Successfully navigated to Buzz page!");
  127 |
  128 |   // Step 7: Post a message "Naveen First Test"
  129 |   await page.waitForSelector('[placeholder="What\'s on your mind?"]'); 
  130 |   await page.getByPlaceholder("What's on your mind?").fill("admin123");
  131 |   await page.waitForSelector('button[type="submit"]');
  132 |   await page.click('button[type="submit"]');
  133 |
  134 |   // Step 8: Wait for the message to appear in the Buzz feed
  135 |
  136 |   await page.waitForSelector('p:has-text("admin123")');
  137 |   console.log("✅ Successfully posted message: 'admin123'!");
  138 |
  139 | });
  140 |
  141 | test.only('TC_05-OrangeHRM Login, Navigate to Time & Buzz, Post Message, Like and comment', async ({ page }) => {
  142 |   // Step 1: Open the OrangeHRM login page
  143 |   await page.goto('https://opensource-demo.orangehrmlive.com/web/index.php/auth/login');
  144 |
  145 |   // Step 2: Wait for login fields and enter credentials
  146 |   await page.fill('input[name="username"]', 'Admin');
  147 |   await page.fill('input[name="password"]', 'admin123');
  148 |
  149 |   // Step 3: Click the login button
  150 |   await page.click('button[type="submit"]');
  151 |
  152 |   // Step 4: Wait for dashboard to load and verify successful login
  153 |   await page.waitForURL(/.*dashboard.*/);
  154 |   console.log("✅ Successfully logged in!");
  155 |
  156 |   // Step 5: Navigate to "Time" page
  157 |   await page.click('a[href="/web/index.php/time/viewTimeModule"]');
  158 |   await page.waitForURL(/.*time.*/);
  159 |   console.log("✅ Successfully navigated to Time page!");
  160 |
  161 |   // Step 6: Navigate to "Buzz" page
  162 |   await page.click('a[href="/web/index.php/buzz/viewBuzz"]');
  163 |   await page.waitForURL(/.*buzz.*/);
  164 |   console.log("✅ Successfully navigated to Buzz page!");
  165 |
  166 |   // Step 7: Post a message "Naveen First Test"
  167 |   await page.waitForSelector('[placeholder="What\'s on your mind?"]'); 
  168 |   await page.getByPlaceholder("What's on your mind?").fill("admin123");
  169 |   await page.waitForSelector('button[type="submit"]');
  170 |   await page.click('button[type="submit"]');
  171 |
  172 |   // Step 8: Wait for the message to appear in the Buzz feed
> 173 |   await page.waitForSelector('p:has-text("admin123")');
      |              ^ Error: page.waitForSelector: Test timeout of 30000ms exceeded.
  174 |   console.log("✅ Successfully posted message: 'admin123'!");
  175 |
  176 |   // Step 9: Like the Latest Post
  177 |   await page.waitForSelector('.post-like-button'); // 🔹 Adjust selector for the like button
  178 |   await page.click('.post-like-button'); // ✅ Click the like button
  179 |   console.log("✅ Successfully liked the latest post!");
  180 |
  181 |   // Step 10: Comment "I love it"
  182 |   await page.waitForSelector('.comment-button');
  183 |   await page.click('.comment-button');
  184 |   await page.fill('.comment-input', 'I love it'); // 🔹 Adjust selector
  185 |   await page.press('.comment-input', 'Enter'); // ✅ Submit comment
  186 |
  187 |   // ✅ Done!
  188 |   console.log("Successfully completed all actions!");
  189 |   await page.waitForTimeout(5000); // Pause to verify actions before closing
  190 |   await browser.close();;;;;;
  191 | });
```